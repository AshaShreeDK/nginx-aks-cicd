trigger:
  branches:
    include:
      - master
  paths:
    include:
      - k8s/**

variables:
  aksResourceGroup: 'AksRG'
  aksClusterName: 'Asha-Aks-Cluster'
  manifestsPath: 'k8s'

stages:
- stage: Deploy
  displayName: Deploy to AKS
  jobs:
  - job: ApplyManifests
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self

    - task: AzureCLI@2
      displayName: 'Login to Azure & Get AKS Credentials'
      inputs:
        azureSubscription: 'azure-sub-connection'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az aks get-credentials -g $(aksResourceGroup) -n $(aksClusterName) --overwrite-existing
          kubectl get nodes

    - script: |
        kubectl apply -f $(manifestsPath)/namespace.yaml
        kubectl apply -f $(manifestsPath)/deployment.yaml
        kubectl apply -f $(manifestsPath)/service.yaml
        kubectl -n nginx-demo rollout status deploy/nginx --timeout=180s
        kubectl -n nginx-demo get svc nginx -o wide
      displayName: 'kubectl apply & rollout status'

